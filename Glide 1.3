local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local imageButton = Instance.new("ImageButton")
imageButton.Size = UDim2.new(0, 110, 0, 70) -- Button size (100x100 pixels)
imageButton.Position = UDim2.new(0.9, -50, 0.5, -50) -- Middle-right side
imageButton.Image = "rbxassetid://107366938518954" -- Image ID
imageButton.BackgroundTransparency = 1 -- Make background transparent
imageButton.Parent = screenGui

local button2CooldownActive = false
local button2CooldownTime = 15

local button2Animation = Instance.new("Animation")
button2Animation.AnimationId = "rbxassetid://104077515216832"

local secondAnimation = Instance.new("Animation")
secondAnimation.AnimationId = "rbxassetid://136705072136812"

local thirdAnimation = Instance.new("Animation")
thirdAnimation.AnimationId = "rbxassetid://134213487382030"

local function stopAllAnimations(character)
    local humanoid = character:WaitForChild("Humanoid")
    local animator = humanoid:FindFirstChild("Animator") or humanoid:WaitForChild("Animator")
    for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
        track:Stop()
    end
end

local function activateButton2()
    if button2CooldownActive then return end

    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    if humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then return end

    button2CooldownActive = true
    imageButton.Visible = false -- Hide button during cooldown

    local animator = humanoid:FindFirstChild("Animator") or humanoid:WaitForChild("Animator")
    local button2Track = animator:LoadAnimation(button2Animation)
    button2Track:Play()

    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
    bodyVelocity.Velocity = Vector3.new(0, -4, 0)
    bodyVelocity.Parent = character.PrimaryPart

    local startTime = tick()
    local animationChanged = false

    while button2CooldownActive do
        if tick() - startTime >= 5 and not animationChanged then
            button2Track:Stop()

            local secondTrack = animator:LoadAnimation(secondAnimation)
            local thirdTrack = animator:LoadAnimation(thirdAnimation)
            secondTrack:Play()
            thirdTrack:Play()

            bodyVelocity.Velocity = Vector3.new(0, -15, 0)
            animationChanged = true
        end

        local ray = Ray.new(character.PrimaryPart.Position, Vector3.new(0, -5, 0))
        local part = workspace:FindPartOnRay(ray, character)
        if part then
            bodyVelocity:Destroy()
            stopAllAnimations(character)
            break
        end
        wait(0.1)
    end

    wait(button2CooldownTime)
    button2CooldownActive = false
    imageButton.Visible = true -- Show button again after cooldown
end

-- Bind ability to Q key
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Q then
        activateButton2()
    end
end)

imageButton.MouseButton1Click:Connect(activateButton2)
